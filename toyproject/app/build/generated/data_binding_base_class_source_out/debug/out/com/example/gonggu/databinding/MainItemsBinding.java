// Generated by view binder compiler. Do not edit!
package com.example.gonggu.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gonggu.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MainItemsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView tvId;

  @NonNull
  public final TextView tvItemPeriod;

  @NonNull
  public final TextView tvItemPeriodname;

  @NonNull
  public final TextView tvItemPrice;

  @NonNull
  public final TextView tvItemPricename;

  @NonNull
  public final TextView tvItemTitle;

  @NonNull
  public final TextView tvItemTitlename;

  @NonNull
  public final TextView tvTitle;

  private MainItemsBinding(@NonNull ConstraintLayout rootView, @NonNull TextView tvId,
      @NonNull TextView tvItemPeriod, @NonNull TextView tvItemPeriodname,
      @NonNull TextView tvItemPrice, @NonNull TextView tvItemPricename,
      @NonNull TextView tvItemTitle, @NonNull TextView tvItemTitlename, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.tvId = tvId;
    this.tvItemPeriod = tvItemPeriod;
    this.tvItemPeriodname = tvItemPeriodname;
    this.tvItemPrice = tvItemPrice;
    this.tvItemPricename = tvItemPricename;
    this.tvItemTitle = tvItemTitle;
    this.tvItemTitlename = tvItemTitlename;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MainItemsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainItemsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.main_items, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainItemsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tv_id;
      TextView tvId = ViewBindings.findChildViewById(rootView, id);
      if (tvId == null) {
        break missingId;
      }

      id = R.id.tv_item_period;
      TextView tvItemPeriod = ViewBindings.findChildViewById(rootView, id);
      if (tvItemPeriod == null) {
        break missingId;
      }

      id = R.id.tv_item_periodname;
      TextView tvItemPeriodname = ViewBindings.findChildViewById(rootView, id);
      if (tvItemPeriodname == null) {
        break missingId;
      }

      id = R.id.tv_item_price;
      TextView tvItemPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvItemPrice == null) {
        break missingId;
      }

      id = R.id.tv_item_pricename;
      TextView tvItemPricename = ViewBindings.findChildViewById(rootView, id);
      if (tvItemPricename == null) {
        break missingId;
      }

      id = R.id.tv_item_title;
      TextView tvItemTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvItemTitle == null) {
        break missingId;
      }

      id = R.id.tv_item_titlename;
      TextView tvItemTitlename = ViewBindings.findChildViewById(rootView, id);
      if (tvItemTitlename == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new MainItemsBinding((ConstraintLayout) rootView, tvId, tvItemPeriod, tvItemPeriodname,
          tvItemPrice, tvItemPricename, tvItemTitle, tvItemTitlename, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
